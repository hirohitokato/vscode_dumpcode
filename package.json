{
    "name": "dump-sourcecode",
    "displayName": "Dump Sources Extension",
    "description": "The extension gathers all source files in the specified folder and concatenates their contents into a single text file.",
    "icon": "assets/icon.png",
    "version": "1.1.4",
    "publisher": "hkato193",
    "repository": {
        "url": "https://github.com/hirohitokato/vscode_dumpcode"
    },
    "engines": {
        "vscode": "^1.75.0"
    },
    "categories": [
        "Programming Languages",
        "Other"
    ],
    "keywords": [
        "chatgpt",
        "llm",
        "review",
        "AI",
        "document"
    ],
    "activationEvents": [],
    "main": "./dist/extension.js",
    "contributes": {
        "views": {
            "explorer": [
                {
                    "id": "dump-sourcecode.targetTreeView",
                    "name": "ファイル・フォルダ選択ビュー"
                }
            ]
        },
        "commands": [
            {
                "command": "dump-sourcecode.copySelected",
                "title": "Dump Selections",
                "icon": "$(clippy)"
            },
            {
                "command": "dump-sourcecode.refreshTree",
                "title": "Refresh Tree",
                "icon": "$(refresh)"
            },
            {
                "command": "dump-sourcecode.clearSelection",
                "title": "Clear Selection",
                "icon": "$(clear-all)"
            },
            {
                "command": "dump-sourcecode.dump_files",
                "title": "Dump files to a single file"
            }
        ],
        "menus": {
            "view/item/context": [
                {
                    "command": "dump-sourcecode.copySelected",
                    "when": "view == dump-sourcecode.targetTreeView",
                    "group": "command@10"
                },
                {
                    "command": "dump-sourcecode.clearSelection",
                    "when": "view == dump-sourcecode.targetTreeView",
                    "group": "options@12"
                }
            ],
            "explorer/context": [
                {
                    "command": "dump-sourcecode.dump_files",
                    "when": "explorerResourceIsFolder",
                    "group": "navigation@999"
                }
            ],
            "view/title": [
                {
                    "command": "dump-sourcecode.refreshTree",
                    "when": "view == dump-sourcecode.targetTreeView",
                    "group": "navigation@1"
                },
                {
                    "command": "dump-sourcecode.clearSelection",
                    "when": "view == dump-sourcecode.targetTreeView",
                    "group": "navigation@2"
                },
                {
                    "command": "dump-sourcecode.copySelected",
                    "when": "view == dump-sourcecode.targetTreeView",
                    "group": "navigation@3"
                }
            ]
        },
        "configuration": {
            "title": "Dump Sourcecode Settings",
            "properties": {
                "dumpSource.outputFileName": {
                    "type": "string",
                    "default": "aggregated_sources.txt",
                    "description": "The name of the output file that will store the concatenated contents of all collected text-based files."
                },
                "dumpSource.userIgnorePatterns": {
                    "type": "array",
                    "items": "string",
                    "default": [
                        "*.md",
                        ".vscode",
                        "package-lock.json"
                    ],
                    "description": "A list of ignore patterns for files and directories (similar to .gitignore syntax). For example, \"*.md\" ignores all Markdown files and \"dir/**/*.txt\" ignores all .txt files under the \"dir\" directory."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "npm run check-types && npm run lint && node esbuild.js",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "package": "npm run check-types && npm run lint && node esbuild.js --production",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "check-types": "tsc --noEmit",
        "lint": "eslint src",
        "test": "vscode-test"
    },
    "dependencies": {
        "ignore": "^6.0.2",
        "isbinaryfile": "^5.0.4"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.9",
        "@types/node": "20.x",
        "@types/vscode": "^1.54.0",
        "@typescript-eslint/eslint-plugin": "^8.10.0",
        "@typescript-eslint/parser": "^8.7.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1",
        "esbuild": "^0.24.0",
        "eslint": "^9.13.0",
        "npm-run-all": "^4.1.5",
        "typescript": "^5.6.3"
    }
}
